	AREA MYDATA, DATA, READONLY
		
YELLOW	EQU  	0xFFE0
BLUE 	EQU  	0x001F
BLACK	EQU   	0x0000	
GREEN 	EQU  	0x07E0	
MAGENTA EQU 	0xF81F
RED  	EQU  	0xF800	

RCC_BASE EQU 0x40021000
RCC_APB2ENR EQU RCC_BASE + 0x18 ;this register is responsible for enabling certain ports, by making the clock affect the target port.
RCC_APB1ENR EQU RCC_BASE + 0X1C ;TO ENABLE PWREN AND BKPEN
RCC_CIR EQU RCC_BASE + 0X08     ;RCC CLOCK INTERUPT REGISTER
RCC_CSR EQU RCC_BASE + 0X024	

RCC_BDCR EQU RCC_BASE + 0X020  ;TO GET RTC SELECT
RTC_BASE EQU 0x40002800
RTC_CRL EQU RTC_BASE + 0X004
	
RTC_PRLH EQU RTC_BASE + 0X08   ;RTC PRE SCALER TO SET CLOCK TO 1HZ
RTC_PRLL EQU RTC_BASE + 0X0C
RTC_CNTL EQU RTC_BASE + 0x1C 	;LOWER RTC COUNTER
RTC_CNTH EQU RTC_BASE + 0x18	; HIGHER RTC COUNTER ;ENABLE CNF BEFORE EDITING	
	
RTC_CRH EQU RTC_BASE + 0X0 ; TAKEEE THIIIISSSSSSSSSSSSSSSSS	
RTC_ALRH EQU RTC_BASE + 0X20
RTC_ALRL EQU RTC_BASE + 0X24	
EXTI_BASE EQU 0x40010400 ;Interrupt mask register  SET LINE 17 FOR THE RTC ALARM 
EXTI_IMR EQU EXTI_BASE	
EXTI_PR EQU EXTI_BASE + 0X14
EXTI_RTSR EQU EXTI_BASE + 0X08 	

EXTI_SWIER EQU EXTI_BASE + 0X10	
	
NVIC_BASE EQU 0xE000E100
NVIC_ISER0 EQU NVIC_BASE
NVIC_ISER1	EQU NVIC_BASE + 0x004 	
NVIC_ISPR0 EQU NVIC_BASE + 0X100




	IMPORT ArrowSelect	
	IMPORT UpArrow	
	
	AREA INTEGRATION, CODE, READONLY
		
	;============================	
	IMPORT DRAW_BEN10_SCREEN
	IMPORT DRAW_HOME_SCREEN
	IMPORT DRAW_INTRO_SCREEN
	IMPORT BOX_EXPANSION	
	IMPORT GET_READINGS
	IMPORT HOME_INTERFACE
	IMPORT ALARM_INTERFACE	
	IMPORT STOPWATCH_INTERFACE
	IMPORT THEMES_INTERFACE
	IMPORT GAMES_INTERFACE	
	IMPORT DRAW_NUMBERS
	IMPORT GET_TEMPRATURE_AND_HUMIDITY_VALUE
	IMPORT SNAKE_GAME	
	IMPORT SNAKE_GAME_HIGHER_LEVEL
	IMPORT CALCULATOR_INTERFACE		
	IMPORT DRAW_ICON_OPS
	IMPORT DRAW_DIGIT_PAIR
	IMPORT DRAW_CLOCK_PART		

	IMPORT DRAW_RECTANGLE_FILLED
	IMPORT GAMES_INTERFACE	
	IMPORT Calculator		
 
		
		
	;===================================
	EXPORT HELLO_SCREEN
	EXPORT OMNITREX_SCREEN
	EXPORT HOME_SCREEN
	EXPORT SCREEN_MAIN	
	EXPORT SCREEN_ALARM
	EXPORT SCREEN_STOPWATCH
	EXPORT SCREEN_THEMES	
	EXPORT SCREEN_GAMES
	EXPORT SCREEN_CALCULATOR		
			
;=====================================HELLO_SCREEN=======================================	

HELLO_SCREEN FUNCTION
	PUSH{LR}
	BL DRAW_INTRO_SCREEN
	BL BOX_EXPANSION
	POP{PC}
	ENDFUNC
;=======================================OMNITREX_SCREEN======================================	
OMNITREX_SCREEN	FUNCTION
	PUSH{LR}
	BL DRAW_BEN10_SCREEN
LOOP_OMNITREX_SCREEN	
	
	BL GET_READINGS
	CMP R5, #16
	BEQ RET_OMNITREX_SCREEN
	B LOOP_OMNITREX_SCREEN
	
RET_OMNITREX_SCREEN	
	MOV R5, #0
	
	POP{PC}
	ENDFUNC
	
;========================================HOME_SCREEN=====================================	
HOME_SCREEN FUNCTION
	PUSH{LR}
	
	BL DRAW_HOME_SCREEN
	LDR R0,=RTC_CNTL
	LTORG
	LDR R11,[R0]
	BL DRAW_CLOCK_PART

	POP{PC}
	ENDFUNC
;=======================================SCREEN_MAIN======================================
SCREEN_MAIN FUNCTION
	PUSH{LR}
	
	BL HOME_INTERFACE
	LDR R0,=RTC_CNTL
	LTORG
	LDR R11,[R0]
	BL DRAW_CLOCK_PART
	
;	LDR R0,=RTC_CNTL
;	LTORG
;	LDR R11,[R0]
;	BL DRAW_HOME_SCREEN
	
	
	BL HANDLE_TEMP_SENSOR
	
LOOP_SCREEN_MAIN	;==========================MAIN======================

	LDR R0,=RTC_CNTL
	LTORG
	LDR R11,[R0]
	BL DRAW_CLOCK_PART
	
	BL GET_READINGS
	CMP R5, #0
	BNE RET_SCREEN_MAIN
	
	B LOOP_SCREEN_MAIN ;=========================MAIN====================
	
RET_SCREEN_MAIN
	POP{PC}
	
	
	ENDFUNC
;=====================================SCREEN_ALARM========================================
SCREEN_ALARM FUNCTION
	PUSH{LR}
	
	BL ALARM_INTERFACE
	
	MOV R9, R10
	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	MOV R7, #0
	MOV R8, #0
	MOV R11, #0
	
	
LOOP_SCREEN_ALARM	;=======================MAIN======================
	
	
	BL GET_READINGS
	
	CMP R5, #2
	BEQ ALARM1_SELECTION_ASSIST
	
	CMP R5, #0
	BNE RET_SCREEN_ALARM_ASSIST
	B LOOP_SCREEN_ALARM

;======================================	;;;R7 SEC, R8, MIN, R11 HOURS 
RET_SCREEN_ALARM_ASSIST
	B RET_SCREEN_ALARM

ALARM1_SELECTION_ASSIST	


	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED

	MOV R9, R10
	MOV R0, #151
	MOV R1, #128
	MOV R3, #283
	MOV R4, #133
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #151           ; X Position
	MOV R1, #130          ; Y Position
	MOV R3, #190
	MOV R4, #133
    LDR R10,=BLUE
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9	
	
ALARM1_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #4  ;INCREMENT 
	BEQ INCREMENT_HOURS
	CMP R5, #8	;DECREMENT
	BEQ CHECK_DECREMENT_HOURS
	CMP R5, #2
	BEQ ALARM2_SELECTION_ASSIST
	CMP R5, #1
	BEQ LOOP_SCREEN_ALARM

	B ALARM1_SELECTION


INCREMENT_HOURS
	ADD R11, R11, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR

	B ALARM1_SELECTION

CHECK_DECREMENT_HOURS
	CMP R11, #0
	BEQ ALARM1_SELECTION
	SUB R11, R11, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR
	B ALARM1_SELECTION	
;==========================================================================	


ALARM2_SELECTION_ASSIST	


	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED

	MOV R9, R10
	MOV R0, #151
	MOV R1, #128
	MOV R3, #283
	MOV R4, #133
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	

	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #161           ; X Position
	MOV R1, #130          ; Y Position
	MOV R4, #133
	MOV R3, #235 
    LDR R10,=BLUE
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9	
	
ALARM2_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #4  ;INCREMENT 
	BEQ INCREMENT_MIN
	CMP R5, #8	;DECREMENT
	BEQ CHECK_DECREMENT_MIN
	CMP R5, #2
	BEQ ALARM3_SELECTION_ASSIST
	CMP R5, #1
	BEQ ALARM1_SELECTION_ASSIST

	B ALARM2_SELECTION


INCREMENT_MIN
	ADD R8, R8, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR

	B ALARM2_SELECTION

CHECK_DECREMENT_MIN
	CMP R8, #0
	BEQ ALARM2_SELECTION
	SUB R8, R8, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR
	B ALARM2_SELECTION
;==========================================================================	

	
ALARM3_SELECTION_ASSIST	

	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED


	MOV R9, R10
	MOV R0, #151
	MOV R1, #128
	MOV R3, #283
	MOV R4, #133
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #135
	MOV R1, #138
	MOV R3, #150
	MOV R4, #220
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	

	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #243           ; X Position
	MOV R1, #130          ; Y Position
	MOV R4, #133
	MOV R3, #282
    LDR R10,=BLUE
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9	
	
ALARM3_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #4  ;INCREMENT 
	BEQ INCREMENT_SEC
	CMP R5, #8	;DECREMENT
	BEQ CHECK_DECREMENT_SEC
	CMP R5, #2
	BEQ ALARM4_SELECTION_ASSIST
	CMP R5, #1
	BEQ ALARM2_SELECTION_ASSIST

	B ALARM3_SELECTION


INCREMENT_SEC
	ADD R7, R7, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR

	B ALARM3_SELECTION

CHECK_DECREMENT_SEC
	CMP R7, #0
	BEQ ALARM3_SELECTION
	SUB R7, R7, #1
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7 
	BL DRAW_DIGIT_PAIR
	B ALARM3_SELECTION
;===========================================================================	
ALARM4_SELECTION_ASSIST	


	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED


	MOV R9, R10
	MOV R0, #135
	MOV R1, #138
	MOV R3, #150
	MOV R4, #220
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #151
	MOV R1, #128
	MOV R3, #283
	MOV R4, #133
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	

	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #141           ; X Position
	MOV R1, #138          ; Y Position
	MOV R3, #144
	MOV R4, #172
    LDR R10,=BLUE
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9	
	
ALARM4_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16
	BEQ ALARM4_OK
	CMP R5, #2
	BEQ ALARM5_SELECTION_ASSIST
	CMP R5, #1
	BEQ ALARM3_SELECTION_ASSIST

	B ALARM4_SELECTION


ALARM4_OK
	
	
	;R0, R1: Current X, Y Position
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2, R11
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, R8 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, R7
	BL DRAW_DIGIT_PAIR
	
	MOV R1, #3600
	MUL R11, R11, R1
	
	
	MOV R1, #60 ;MIN
	MUL R8, R8, R1
	MOV R2, #0
	ADD R2, R8, R11
	ADD R2, R7
	BL SET_ALARM
	mov R7, #0
	MOV R8, #0
	MOV R11, #0
	b LOOP_SCREEN_ALARM

	B ALARM4_SELECTION	
	
;=================================================================	
ALARM5_SELECTION_ASSIST	

	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED




	MOV R9, R10
	MOV R0, #135
	MOV R1, #138
	MOV R3, #150
	MOV R4, #220
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #141           ; X Position
	MOV R1, #178          ; Y Position
	MOV R3, #144
	MOV R4, #212
    LDR R10,=BLUE
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9	
	
ALARM5_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16
	BEQ ALARM5_OK
	CMP R5, #1
	BEQ ALARM4_SELECTION_ASSIST

	B ALARM5_SELECTION


ALARM5_OK
	MOV R7, #0
	MOV R8, #0
	MOV R11,#0
	

	
	;R0, R1: Current X, Y Position
	MOV R9, R10
	MOV R0,#151
	MOV R1,#100
	MOV R3,#283
	MOV R4,#127
	LDR R10,=BLACK 
	BL DRAW_RECTANGLE_FILLED 
	MOV R10, R9	
	
	
	MOV R0,#151
	MOV R1,#100 	
	
	MOV R2,#0 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#197
	MOV R1,#100
	
	MOV R2, #0 
	BL DRAW_DIGIT_PAIR
	
	MOV R0,#243
	MOV R1,#100
	
	MOV R2, #0 
	BL DRAW_DIGIT_PAIR

	B ALARM5_SELECTION	
;======================================================	
	
	
	
	B LOOP_SCREEN_ALARM;=======================MAIN=====================
	
RET_SCREEN_ALARM
	POP{PC}

	
	ENDFUNC
	
;=========================SCREEN_STOPWATCH==========================
SCREEN_STOPWATCH FUNCTION
	PUSH{LR}
	BL STOPWATCH_INTERFACE
LOOP_SCREEN_STOPWATCH	;========================MAIN====================




	
	
	
	BL GET_READINGS
	
	CMP R5, #16
	BEQ RUN_STOP
	
	
	CMP R5, #0
	BNE RET_SCREEN_STOPWATCH
	
	
	
	
	
	B LOOP_SCREEN_STOPWATCH ;=========================MAIN================
	
	
RUN_STOP
	MOV R5, #0
	LDR R0, =RTC_CNTL
	LDR R1,[R0]

LOOPFOR
	LDR R2,[R0]
	SUB R11,R2,R1
	
	BL DRAW_CLOCK_PART
	
	BL GET_READINGS
	CMP R5, #16
	BEQ RET_SCREEN_STOPWATCH
	CMP R5,#4 
	BEQ RET_SCREEN_STOPWATCH
	CMP R5, #8
	BEQ RET_SCREEN_STOPWATCH
	

	B LOOPFOR
	
RET_SCREEN_STOPWATCH	

	POP{PC}
	ENDFUNC
	
	
	
;=========================SCREEN_CALCULATOR==========================
SCREEN_CALCULATOR FUNCTION
	PUSH{LR}
	
FUNC_CALC_START
	
	BL CALCULATOR_INTERFACE
	
LOOP_SCREEN_CALCULATOR	;========================MAIN====================
	
	BL GET_READINGS
	CMP R5, #16
	BEQ START_CALC
	
	CMP R5, #0
	BNE RET_SCREEN_CALCULATOR
	

	B LOOP_SCREEN_CALCULATOR ;=========================MAIN================
START_CALC	
	bl Calculator
	MOV R5, #0
	BL DRAW_HOME_SCREEN
	B FUNC_CALC_START
	
RET_SCREEN_CALCULATOR


	POP{PC}
	ENDFUNC	
	
	
;==================================SCREEN_THEMES====================================	
SCREEN_THEMES FUNCTION
	PUSH{LR}
	BL THEMES_INTERFACE  ;FUNCTION TO DRAW ICONS
	
	MOV R9, R10
	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
LOOP_SCREEN_THEMES	;========================MAIN====================
	
	BL GET_READINGS
	
	CMP R5, #2
	BEQ THEME1_SELECTION_ASSIST
	
	CMP R5, #0
	BNE RET_SCREEN_THEMES_ASSIST
	B LOOP_SCREEN_THEMES
	;////////////////////////////////////////////////////
THEME1_SELECTION_ASSIST	

	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED
	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #151
	MOV R1, #180
	MOV R3, #311
	MOV R4, #205
	LDR R10, =BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	;FIX COORDINATES
	MOV R9, R10
	MOV R0, #161           ; X Position
	MOV R1, #185          ; Y Position
	LDR R6, =UpArrow   ; Bitmap Address
    LDR R10,=BLUE
	BL DRAW_ICON_OPS
	MOV R10, R9
	
THEME1_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16 
	BEQ CONVEFRT_TO_THEME1
	CMP R5, #2
	BEQ THEME2_SELECTION_ASSIST
	CMP R5, #1
	BEQ LOOP_SCREEN_THEMES

	B THEME1_SELECTION
	;=====
RET_SCREEN_THEMES_ASSIST
	B RET_SCREEN_THEMES
	;========

THEME2_SELECTION_ASSIST
	MOV R9, R10
	MOV R0, #151
	MOV R1, #180
	MOV R3, #311
	MOV R4, #205
	LDR R10, =BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #221           ; X Position
	MOV R1, #185          ; Y Position
	LDR R6, =UpArrow   ; Bitmap Address
    LDR R10, =BLUE
	BL DRAW_ICON_OPS
	
	MOV R10, R9
THEME2_SELECTION

	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16 
	BEQ CONVEFRT_TO_THEME2
	CMP R5, #2
	BEQ THEME3_SELECTION_ASSIST
	CMP R5, #1
	BEQ THEME1_SELECTION_ASSIST

	B THEME2_SELECTION
	
THEME3_SELECTION_ASSIST

	MOV R9, R10
	MOV R0, #151
	MOV R1, #180
	MOV R3, #311
	MOV R4, #205
	LDR R10, =BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #281           ; X Position
	MOV R1, #185          ; Y Position
	LDR R6, =UpArrow   ; Bitmap Address
    LDR R10, =BLUE
	BL DRAW_ICON_OPS
	MOV R10, R9
THEME3_SELECTION

	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16 
	BEQ CONVEFRT_TO_THEME3
	CMP R5, #1
	BEQ THEME2_SELECTION_ASSIST

	B THEME3_SELECTION
	
CONVEFRT_TO_THEME1
	MOV R5, #0
	LDR R10,=GREEN
	MOV R1, #1

	B  RET_SCREEN_THEMES

CONVEFRT_TO_THEME2
	MOV R5, #0
	LDR R10,=RED
	MOV R1, #1

	B  RET_SCREEN_THEMES
	
CONVEFRT_TO_THEME3
	MOV R5, #0
	LDR R10,=MAGENTA
	MOV R1, #1

	B  RET_SCREEN_THEMES
	
	
	
	B LOOP_SCREEN_THEMES ;=========================MAIN================
	
RET_SCREEN_THEMES	

	POP{PC}
	ENDFUNC
	
;=======================================SCREEN_GAMES=============================================	
SCREEN_GAMES FUNCTION
	PUSH{LR}
ret_FROM_GAME
	
	BL GAMES_INTERFACE
	MOV R9, R10
	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	LDR R10,=BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	
	
LOOP_SCREEN_GAMES	;========================MAIN====================
	
	BL GET_READINGS
	
;==========================================================	
	CMP R5, #2
	BEQ GAME1_SELECTION_ASSIST
;=========================
	CMP R5, #0
	BNE RET_SCREEN_GAMES
	
	B LOOP_SCREEN_GAMES
	
GAME1_SELECTION_ASSIST	

	MOV R0, #40
	MOV R1, #150
	MOV R3, #80
	MOV R4, #153
	;LDR R10,=GREEN
	BL DRAW_RECTANGLE_FILLED
	
	MOV R9, R10
	MOV R0, #128
	MOV R1, #142
	MOV R3, #148
	MOV R4, #202
	LDR R10, =BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #128           ; X Position
	MOV R1, #142          ; Y Position
	LDR R6, =ArrowSelect   ; Bitmap Address
    LDR R10,=BLUE
	BL DRAW_ICON_OPS
	MOV R10, R9

GAME1_SELECTION
	
	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16 
	BEQ SNAKE_GAME1_START
	CMP R5, #8
	BEQ GAME2_SELECTION_ASSIST
	CMP R5, #1
	BEQ LOOP_SCREEN_GAMES

	B GAME1_SELECTION

GAME2_SELECTION_ASSIST

	MOV R9, R10
	MOV R0, #128
	MOV R1, #142
	MOV R3, #148
	MOV R4, #202
	LDR R10, =BLACK
	BL DRAW_RECTANGLE_FILLED
	MOV R10, R9
	
	MOV R9, R10
	MOV R0, #128           ; X Position
	MOV R1, #182          ; Y Position
	LDR R6, =ArrowSelect   ; Bitmap Address
    LDR R10, =BLUE
	BL DRAW_ICON_OPS
	MOV R10, R9
	
GAME2_SELECTION

	MOV R5, #0
	BL GET_READINGS
	CMP R5, #16 
	BEQ SNAKE_GAME2_START
	CMP R5, #4
	BEQ GAME1_SELECTION_ASSIST
	CMP R5, #1
	BEQ LOOP_SCREEN_GAMES

	B GAME2_SELECTION
	
;==========================================================	
SNAKE_GAME1_START
	MOV R5, #0
	BL SNAKE_GAME
	BL DRAW_HOME_SCREEN
	B  ret_FROM_GAME

SNAKE_GAME2_START
	MOV R5, #0
	BL SNAKE_GAME_HIGHER_LEVEL
	BL DRAW_HOME_SCREEN
	B  ret_FROM_GAME
	
	
	B LOOP_SCREEN_GAMES ;=========================MAIN================
	
RET_SCREEN_GAMES	

	POP{PC}
	ENDFUNC
	






;=============================================================================
HANDLE_TEMP_SENSOR FUNCTION
	PUSH{R0-R12, LR}
	BL GET_TEMPRATURE_AND_HUMIDITY_VALUE	
	
	;R12 HUMADITY
	;R11 TEMP
	
;		MOV R0, #200           ; X Position
;	MOV R1, #75          ; Y Position
;	LDR R6, =Char3	; Bitmap Address
;	LDR R10, =GREEN
;	BL DRAW_CHAR
	
	MOV R7, #0
	AND R7, R11, #0X0F
	LDR R10 ,=YELLOW 
	MOV R0, #220
	MOV R1, #75
	BL DRAW_NUMBERS
	
	LSR R11, #4
	
	MOV R7, #0
	AND R7, R11, #0X0F
	LDR R10 ,=YELLOW 
	MOV R0, #200
	MOV R1, #75
	BL DRAW_NUMBERS
	
	
	
	MOV R7, #0
	AND R7, R12, #0X0F
	LDR R10 ,=BLUE 
	MOV R0, #220
	MOV R1, #125
	BL DRAW_NUMBERS
	
	LSR R12, #4
	
	MOV R7, #0
	AND R7, R12, #0X0F
	LDR R10 ,=BLUE 
	MOV R0, #200
	MOV R1, #125
	BL DRAW_NUMBERS


	POP{R0-R12, PC}
	ENDFUNC
	
;==============================================================================
SET_ALARM FUNCTION
	PUSH{R0-R12, LR}
	LDR R0,=RTC_CRH
	LDR R1,[R0]
	ORR R1,#2
	STR R1,[R0]
	LDR R1,[R0]
	
	LDR R0,=RTC_CNTL
	LDR R1,[R0]
	ADD R2,R1 ;WHERE R2 IS THE VALUE ADDED FROM THE USER
	
	
	
	LDR R0,=RTC_ALRL
	LDR R1,[R0]
	MOV R1,R2
	STR R1,[R0]
	LDR R1,[R0]
	
	LDR R0,=RTC_ALRH
	LDR R1,[R0]
	MOV R1,#0
	STR R1,[R0]	
	LDR R1,[R0]
	
	LDR R0,=RTC_CRL
	LDR R1,[R0]
	BIC R1,#2
	STR R1,[R0]
	LDR R1,[R0]
	
	
	
	LDR R0, =EXTI_IMR
	LDR R1,[R0]	
	MOV R1, #1
	LSL R1, #17       ; Bit mask for EXTI Line 17; Clear pending bit by writing '1'
	STR R1, [R0]  
	LDR R1,[R0]	
	

	LDR R0, =EXTI_RTSR
	MOV R1, #1    ; Set rising trigger for EXTI Line 17
	LSL R1, #17 
	STR R1, [R0]  
	LDR R1,[R0]

	LDR R0, =EXTI_PR       
	MOV R1, #1
	LSL R1, #17       ; Bit mask for EXTI Line 17  ;Clear pending bit by writing '1'
	STR R1, [R0] 
	LDR R1,[R0]	

	LDR R0, =NVIC_ISER1        
	MOV R1, #1
	LSL R1, #9     ; Enable IRQ 17 (EXTI15_10)
	STR R1, [R0] 
	LDR R1,[R0]	
	
;	LDR R0,=EXTI_SWIER
;	LDR R1,[R0]
;	MOV R1,#1
;	LSL R1,#17
;	STR R1,[R0]

;	LDR R0, =0xE000E204            ; NVIC_ISPR1 base address
;	MOV R1, #(1 << 9)              ; Set pending bit for IRQ41
;	STR R1, [R0]

	LDR R0, =RTC_CRL
	LDR R1, [R0]
	BIC R1, R1,#(1<<4) ;RESET CNF 
	STR R1,[R0]
	LDR R1,[R0]

	
	
	
	POP{R0-R12, PC}
	ENDFUNC





;=============================================================================


	END